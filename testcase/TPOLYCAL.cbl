       PROCESS NODLL,NODYNAM,TEST(NOSEP),NOCICS,NOSQL,PGMN(LU),NOSEQ
      *+---------------------------------------------------------------+
      *| TPOLYCAL                                                      |
      *| UNIT TEST FOR Z/OS: TEST CASE PROGRAM                         |
      *| TEST CASE VERSION: 201                                        |
      *| DATE GENERATED: 09/30/2025 13:59                              |
      *| ID: 2b4a1c52-da3f-4d01-a4b0-9bea87fe930c                      |
      *+---------------------------------------------------------------+
      *+---------------------------------------------------------------+
      *| UNIT TEST FOR Z/OS: TEST_TEST1                                |
      *|     FOR TEST TEST1                                            |
      *| TEST CASE VERSION: 201                                        |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'TEST_TEST1'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 PROGRAM-NAME   PIC X(8)  VALUE 'POLYCALC'.
       01 AZ-CSECT       PIC X(72) VALUE SPACES.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM TEST CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 BZUGETEP          PIC X(8) VALUE 'BZUGETEP'.
       01 AZ-EP-PTR         USAGE IS POINTER.
       01 AZ-TRACE-PTR      POINTER.
       01 ASSERT-ST.
         03 ASSERT-RC PIC 9(9) BINARY VALUE 4.
         03 ASSERT-TEXT PIC 9(4) BINARY VALUE 0.
       01 AZ-TEST-NAME-LEN       PIC S9(9) COMP-5.
       01 AZ-RC-WORK             PIC S9(4) USAGE BINARY.
       1 AZ-TEST-INPUT-DATA-VALUE.
          3 AZU00000000.
            5 PIC X(1) DISPLAY VALUE '1'.
            5 PIC X(9) DISPLAY VALUE SPACES.
          3 AZU00000001.
            5 PIC X(1) DISPLAY VALUE 'B'.
          3 AZU00000002.
            5 PIC X(2) DISPLAY VALUE SPACES.
       1 AZ-TEST-EXPECTED-DATA-VALUE.
          3 AZU00000003.
            5 PIC X(1) DISPLAY VALUE '1'.
            5 PIC X(9) DISPLAY VALUE SPACES.
          3 AZU00000004.
            5 PIC X(1) DISPLAY VALUE 'B'.
          3 AZU00000005.
            5 PIC X(2) DISPLAY VALUE '00'.
       01 AZ-COMPARE.
         03 AZ-COMPARE-ITEM-NAME-PTR  POINTER.
         03 AZ-COMPARE-ITEM-NAME-LEN  PIC S9(9) COMP-5.
         03 AZ-COMPARE-ITEM-VALUE-PTR POINTER.
         03 AZ-COMPARE-ITEM-VALUE-LEN PIC S9(9) COMP-5.
         03 AZ-COMPARE-ITEM-EXP-VALUE-PTR POINTER.
         03 AZ-COMPARE-ITEM-EXP-VALUE-LEN PIC S9(9) COMP-5.
         03 AZ-ITEM-NAME-S            PIC S9(8) COMP.
         03 AZ-ITEM-NAME-LEN          PIC S9(8) COMP.
       LOCAL-STORAGE SECTION.
       1 AZ-COMPARE-ITEM-NAMES.
         3 AZU00000006.
            5 PIC X(20) DISPLAY VALUE 'POLICY-NUMBER OF LIN'.
            5 PIC X(9) DISPLAY VALUE 'KAGE-DATA'.
         3 AZU00000008.
            5 PIC X(20) DISPLAY VALUE 'DRIVER-AGE OF LINKAG'.
            5 PIC X(6) DISPLAY VALUE 'E-DATA'.
         3 AZU0000000A.
            5 PIC X(20) DISPLAY VALUE 'CAR-VALUE OF LINKAGE'.
            5 PIC X(5) DISPLAY VALUE '-DATA'.
         3 AZU0000000C.
            5 PIC X(20) DISPLAY VALUE 'COVERAGE-LEVEL OF LI'.
            5 PIC X(10) DISPLAY VALUE 'NKAGE-DATA'.
         3 AZU0000000E.
            5 PIC X(20) DISPLAY VALUE 'CALCULATED-PREMIUM O'.
            5 PIC X(14) DISPLAY VALUE 'F LINKAGE-DATA'.
         3 AZU00000010.
            5 PIC X(20) DISPLAY VALUE 'RET-CODE OF LINKAGE-'.
            5 PIC X(4) DISPLAY VALUE 'DATA'.
       1 AZ-COMPARE-WORK-ITEMS.
          3 AZU00000007 PIC X(10) OCCURS 2.
          3 AZU00000009 PIC 9(2) OCCURS 2.
          3 AZU0000000B PIC 9(7).9(2) OCCURS 2.
          3 AZU0000000D PIC X(1) OCCURS 2.
          3 AZU0000000F PIC 9(5).9(2) OCCURS 2.
          3 AZU00000011 PIC X(2) OCCURS 2.
      *  *** LINKAGE-DATA : ZUT00000005
       1 ZUT00000005.
      *    *** POLICY-NUMBER : ZUT00000006
         15 ZUT00000006 PIC X(10).
      *    *** DRIVER-AGE : ZUT00000007
         15 ZUT00000007 PIC 99.
      *    *** CAR-VALUE : ZUT00000008
         15 ZUT00000008 PIC 9(7)V99.
      *    *** COVERAGE-LEVEL : ZUT00000009
         15 ZUT00000009 PIC X.
      *    *** BASIC : ZUT0000000A
         88 ZUT0000000A VALUE 'B'.
      *    *** STANDRD : ZUT0000000B
         88 ZUT0000000B VALUE 'S'.
      *    *** PREMIUM : ZUT0000000C
         88 ZUT0000000C VALUE 'P'.
      *    *** CALCULATED-PREMIUM : ZUT0000000D
         15 ZUT0000000D PIC 9(5)V99.
      *    *** RET-CODE : ZUT0000000E
         15 ZUT0000000E PIC X(2).
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-ARG-LIST.
         03 ARG-LENGTH PIC 9(4) COMP-4.
         03 ARG-DATA PIC X(256).
       01 AZ-INFO-BLOCK.
         COPY EQAITERC.
       01 AZ-PROC-PTR       USAGE IS PROCEDURE-POINTER.
       01 AZ-COMPARE-ITEM-NAME      PIC X(1000).
       01 AZ-COMPARE-ITEM-VALUE     PIC X(254).
       01 AZ-COMPARE-ITEM-EXP-VALUE PIC X(254).
       PROCEDURE DIVISION USING AZ-TEST AZ-ARG-LIST AZ-INFO-BLOCK.
      * START
           DISPLAY 'AZU0000I TEST_TEST1 STARTED...'
           MOVE 0 TO AZ-TEST-NAME-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-NAME-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * INITIALIZE PARAMETER
           PERFORM INITIALIZE-PARM
      * SET AREA ADDRESS TO POINTER
      * SET INPUT VALUE
           MOVE 0 TO RETURN-CODE.
           MOVE AZU00000000 TO ZUT00000006 OF ZUT00000005
           MOVE 24 TO ZUT00000007 OF ZUT00000005
           MOVE 500000 TO ZUT00000008 OF ZUT00000005
           MOVE AZU00000001 TO ZUT00000009 OF ZUT00000005
           MOVE 00 TO ZUT0000000D OF ZUT00000005
           MOVE AZU00000002 TO ZUT0000000E OF ZUT00000005
      * CALL TEST PROGRAM
           DISPLAY 'AZU0000I CALL POLYCALC'
           CALL BZUGETEP USING BY REFERENCE PROGRAM-NAME AZ-CSECT
             RETURNING AZ-EP-PTR.
           IF AZ-EP-PTR = NULL THEN
             MOVE 1 TO MESSAGE-LEN OF BZ-ASSERT
             STRING 'UNABLE TO GET THE ENTRY POINT BY BZUGETEP.'
               DELIMITED BY SIZE
               INTO MESSAGE-TXT OF BZ-ASSERT
               WITH POINTER MESSAGE-LEN OF BZ-ASSERT
             END-STRING
             SUBTRACT 1 FROM MESSAGE-LEN OF BZ-ASSERT
             PERFORM THROW-ASSERTION-M
             GOBACK
           END-IF
           SET ADDRESS OF AZ-PROC-PTR TO AZ-EP-PTR.
           CALL AZ-PROC-PTR
           USING ZUT00000005
           .
      * EVALUATE OUTPUT VALUE
           MOVE 0 TO RETURN-CODE
           IF ZUT00000006 OF ZUT00000005 = AZU00000003 THEN
             CONTINUE
           ELSE
             MOVE ZUT00000006 OF ZUT00000005 TO AZU00000007(1)
             MOVE AZU00000003 TO AZU00000007(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000006
             MOVE LENGTH OF AZU00000006 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000007(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000007(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF (ZUT00000007 OF ZUT00000005 IS NUMERIC)
               AND (ZUT00000007 OF ZUT00000005 = 24) THEN
             CONTINUE
           ELSE
             MOVE ZUT00000007 OF ZUT00000005 TO AZU00000009(1)
             MOVE 24 TO AZU00000009(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000008
             MOVE LENGTH OF AZU00000008 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF ZUT00000007
           OF ZUT00000005
             MOVE 2 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000009(2)
             MOVE 2 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF (ZUT00000008 OF ZUT00000005 IS NUMERIC)
               AND (ZUT00000008 OF ZUT00000005 = 500000) THEN
             CONTINUE
           ELSE
             MOVE ZUT00000008 OF ZUT00000005 TO AZU0000000B(1)
             MOVE 500000 TO AZU0000000B(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000000A
             MOVE LENGTH OF AZU0000000A TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF ZUT00000008
           OF ZUT00000005
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000000B(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT00000009 OF ZUT00000005 = AZU00000004 THEN
             CONTINUE
           ELSE
             MOVE ZUT00000009 OF ZUT00000005 TO AZU0000000D(1)
             MOVE AZU00000004 TO AZU0000000D(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000000C
             MOVE LENGTH OF AZU0000000C TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000000D(1)
             MOVE 1 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000000D(2)
             MOVE 1 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF (ZUT0000000D OF ZUT00000005 IS NUMERIC)
               AND (ZUT0000000D OF ZUT00000005 = 722.4) THEN
             CONTINUE
           ELSE
             MOVE ZUT0000000D OF ZUT00000005 TO AZU0000000F(1)
             MOVE 722.4 TO AZU0000000F(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000000E
             MOVE LENGTH OF AZU0000000E TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF ZUT0000000D
           OF ZUT00000005
             MOVE 8 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000000F(2)
             MOVE 8 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT0000000E OF ZUT00000005 = AZU00000005 THEN
             CONTINUE
           ELSE
             MOVE ZUT0000000E OF ZUT00000005 TO AZU00000011(1)
             MOVE AZU00000005 TO AZU00000011(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000010
             MOVE LENGTH OF AZU00000010 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000011(1)
             MOVE 2 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000011(2)
             MOVE 2 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
      * END
           DISPLAY 'AZU0000I TEST_TEST1 END.'
           GOBACK.
       INITIALIZE-PARM.
           INITIALIZE ZUT00000005
           EXIT.
       THROW-ASSERTION.
           MOVE 1 TO MESSAGE-LEN OF BZ-ASSERT
           STRING 'COMPARE FAILED IN PROCEDURE DIVISION.'
             DELIMITED BY SIZE INTO MESSAGE-TXT OF BZ-ASSERT
             WITH POINTER MESSAGE-LEN OF BZ-ASSERT
           END-STRING
           SUBTRACT 1 FROM MESSAGE-LEN OF BZ-ASSERT
           SET ADDRESS OF AZ-COMPARE-ITEM-NAME TO
           AZ-COMPARE-ITEM-NAME-PTR.
           SET ADDRESS OF AZ-COMPARE-ITEM-VALUE TO
           AZ-COMPARE-ITEM-VALUE-PTR.
           SET ADDRESS OF AZ-COMPARE-ITEM-EXP-VALUE TO
           AZ-COMPARE-ITEM-EXP-VALUE-PTR.
           DISPLAY 'AZU0000I *******************************************
      -    '*************************************'
           DISPLAY 'AZU2001W THE TEST "' AZ-TEST(1:AZ-TEST-NAME-LEN) '"
      -    'FAILED DUE TO AN ASSERTION.'
           DISPLAY 'AZU1101I ' MESSAGE-TXT OF BZ-ASSERT(1:MESSAGE-LEN
           OF BZ-ASSERT)
           DISPLAY 'AZU0000I  DATA ITEM NAME : '
           AZ-COMPARE-ITEM-NAME(1:AZ-COMPARE-ITEM-NAME-LEN)
           DISPLAY 'AZU0000I   VALUE         : '
           AZ-COMPARE-ITEM-VALUE(1:AZ-COMPARE-ITEM-VALUE-LEN)
           DISPLAY 'AZU0000I   EXPECTED VALUE: '
           AZ-COMPARE-ITEM-EXP-VALUE(1:AZ-COMPARE-ITEM-EXP-VALUE-LEN)
           DISPLAY 'AZU0000I *******************************************
      -    '*************************************'
           CALL BZUASSRT USING BZ-P1 BZ-P2 BZ-P3 BZ-ASSERT
           MOVE 1 TO TRACE-LEN OF BZ-TRACE
           MOVE 1 TO AZ-ITEM-NAME-S
           PERFORM UNTIL AZ-ITEM-NAME-S > AZ-COMPARE-ITEM-NAME-LEN
             MOVE 206 TO AZ-ITEM-NAME-LEN
             IF AZ-ITEM-NAME-S + 206 > AZ-COMPARE-ITEM-NAME-LEN THEN
               MOVE AZ-COMPARE-ITEM-NAME-LEN TO AZ-ITEM-NAME-LEN
               SUBTRACT AZ-ITEM-NAME-S FROM AZ-ITEM-NAME-LEN
               ADD 1 TO AZ-ITEM-NAME-LEN
             END-IF
             STRING 'ITEM NAME='
             AZ-COMPARE-ITEM-NAME(AZ-ITEM-NAME-S:AZ-ITEM-NAME-LEN)
               DELIMITED BY SIZE INTO TRACE-TXT OF BZ-TRACE
               WITH POINTER TRACE-LEN OF BZ-TRACE
             END-STRING
             SUBTRACT 1 FROM TRACE-LEN OF BZ-TRACE
             SET AZ-TRACE-PTR TO ADDRESS OF TRACE-TXT OF BZ-TRACE
             CALL BZUTRACE USING BZ-TRACE
             MOVE 1 TO TRACE-LEN OF BZ-TRACE
             ADD AZ-ITEM-NAME-LEN TO AZ-ITEM-NAME-S
           END-PERFORM
           STRING 'VALUE   ='
           AZ-COMPARE-ITEM-VALUE(1:AZ-COMPARE-ITEM-VALUE-LEN)
               DELIMITED BY SIZE INTO TRACE-TXT OF BZ-TRACE
               WITH POINTER TRACE-LEN OF BZ-TRACE
             END-STRING
           SUBTRACT 1 FROM TRACE-LEN OF BZ-TRACE
           CALL BZUTRACE USING BZ-TRACE
           MOVE 1 TO TRACE-LEN OF BZ-TRACE
           STRING 'EXPECTED='
           AZ-COMPARE-ITEM-EXP-VALUE(1:AZ-COMPARE-ITEM-EXP-VALUE-LEN)
               DELIMITED BY SIZE INTO TRACE-TXT OF BZ-TRACE
               WITH POINTER TRACE-LEN OF BZ-TRACE
             END-STRING
           SUBTRACT 1 FROM TRACE-LEN OF BZ-TRACE
           CALL BZUTRACE USING BZ-TRACE
           EXIT.
       THROW-ASSERTION-M.
           DISPLAY 'AZU0000I *******************************************
      -    '*************************************'
           DISPLAY 'AZU2001W THE TEST "' AZ-TEST(1:AZ-TEST-NAME-LEN) '"
      -    'FAILED DUE TO AN ASSERTION.'
           DISPLAY 'AZU1101I ' MESSAGE-TXT OF BZ-ASSERT(1:MESSAGE-LEN
           OF BZ-ASSERT)
           DISPLAY 'AZU0000I *******************************************
      -    '*************************************'
           CALL BZUASSRT USING BZ-P1 BZ-P2 BZ-P3 BZ-ASSERT
           EXIT.
       END PROGRAM TEST_TEST1.
      *+---------------------------------------------------------------+
      *| UNIT TEST FOR Z/OS: TEST_TEST2                                |
      *|     FOR TEST TEST2                                            |
      *| TEST CASE VERSION: 201                                        |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'TEST_TEST2'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 PROGRAM-NAME   PIC X(8)  VALUE 'POLYCALC'.
       01 AZ-CSECT       PIC X(72) VALUE SPACES.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM TEST CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 BZUGETEP          PIC X(8) VALUE 'BZUGETEP'.
       01 AZ-EP-PTR         USAGE IS POINTER.
       01 AZ-TRACE-PTR      POINTER.
       01 ASSERT-ST.
         03 ASSERT-RC PIC 9(9) BINARY VALUE 4.
         03 ASSERT-TEXT PIC 9(4) BINARY VALUE 0.
       01 AZ-TEST-NAME-LEN       PIC S9(9) COMP-5.
       01 AZ-RC-WORK             PIC S9(4) USAGE BINARY.
       1 AZ-TEST-INPUT-DATA-VALUE.
          3 AZU00000012.
            5 PIC X(1) DISPLAY VALUE '1'.
            5 PIC X(9) DISPLAY VALUE SPACES.
          3 AZU00000013.
            5 PIC X(1) DISPLAY VALUE 'B'.
          3 AZU00000014.
            5 PIC X(2) DISPLAY VALUE SPACES.
       1 AZ-TEST-EXPECTED-DATA-VALUE.
          3 AZU00000015.
            5 PIC X(1) DISPLAY VALUE '1'.
            5 PIC X(9) DISPLAY VALUE SPACES.
          3 AZU00000016.
            5 PIC X(1) DISPLAY VALUE 'B'.
          3 AZU00000017.
            5 PIC X(2) DISPLAY VALUE '00'.
       01 AZ-COMPARE.
         03 AZ-COMPARE-ITEM-NAME-PTR  POINTER.
         03 AZ-COMPARE-ITEM-NAME-LEN  PIC S9(9) COMP-5.
         03 AZ-COMPARE-ITEM-VALUE-PTR POINTER.
         03 AZ-COMPARE-ITEM-VALUE-LEN PIC S9(9) COMP-5.
         03 AZ-COMPARE-ITEM-EXP-VALUE-PTR POINTER.
         03 AZ-COMPARE-ITEM-EXP-VALUE-LEN PIC S9(9) COMP-5.
         03 AZ-ITEM-NAME-S            PIC S9(8) COMP.
         03 AZ-ITEM-NAME-LEN          PIC S9(8) COMP.
       LOCAL-STORAGE SECTION.
       1 AZ-COMPARE-ITEM-NAMES.
         3 AZU00000018.
            5 PIC X(20) DISPLAY VALUE 'POLICY-NUMBER OF LIN'.
            5 PIC X(9) DISPLAY VALUE 'KAGE-DATA'.
         3 AZU0000001A.
            5 PIC X(20) DISPLAY VALUE 'DRIVER-AGE OF LINKAG'.
            5 PIC X(6) DISPLAY VALUE 'E-DATA'.
         3 AZU0000001C.
            5 PIC X(20) DISPLAY VALUE 'CAR-VALUE OF LINKAGE'.
            5 PIC X(5) DISPLAY VALUE '-DATA'.
         3 AZU0000001E.
            5 PIC X(20) DISPLAY VALUE 'COVERAGE-LEVEL OF LI'.
            5 PIC X(10) DISPLAY VALUE 'NKAGE-DATA'.
         3 AZU00000020.
            5 PIC X(20) DISPLAY VALUE 'CALCULATED-PREMIUM O'.
            5 PIC X(14) DISPLAY VALUE 'F LINKAGE-DATA'.
         3 AZU00000022.
            5 PIC X(20) DISPLAY VALUE 'RET-CODE OF LINKAGE-'.
            5 PIC X(4) DISPLAY VALUE 'DATA'.
       1 AZ-COMPARE-WORK-ITEMS.
          3 AZU00000019 PIC X(10) OCCURS 2.
          3 AZU0000001B PIC 9(2) OCCURS 2.
          3 AZU0000001D PIC 9(7).9(2) OCCURS 2.
          3 AZU0000001F PIC X(1) OCCURS 2.
          3 AZU00000021 PIC 9(5).9(2) OCCURS 2.
          3 AZU00000023 PIC X(2) OCCURS 2.
      *  *** LINKAGE-DATA : ZUT00000005
       1 ZUT00000005.
      *    *** POLICY-NUMBER : ZUT00000006
         15 ZUT00000006 PIC X(10).
      *    *** DRIVER-AGE : ZUT00000007
         15 ZUT00000007 PIC 99.
      *    *** CAR-VALUE : ZUT00000008
         15 ZUT00000008 PIC 9(7)V99.
      *    *** COVERAGE-LEVEL : ZUT00000009
         15 ZUT00000009 PIC X.
      *    *** BASIC : ZUT0000000A
         88 ZUT0000000A VALUE 'B'.
      *    *** STANDRD : ZUT0000000B
         88 ZUT0000000B VALUE 'S'.
      *    *** PREMIUM : ZUT0000000C
         88 ZUT0000000C VALUE 'P'.
      *    *** CALCULATED-PREMIUM : ZUT0000000D
         15 ZUT0000000D PIC 9(5)V99.
      *    *** RET-CODE : ZUT0000000E
         15 ZUT0000000E PIC X(2).
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-ARG-LIST.
         03 ARG-LENGTH PIC 9(4) COMP-4.
         03 ARG-DATA PIC X(256).
       01 AZ-INFO-BLOCK.
         COPY EQAITERC.
       01 AZ-PROC-PTR       USAGE IS PROCEDURE-POINTER.
       01 AZ-COMPARE-ITEM-NAME      PIC X(1000).
       01 AZ-COMPARE-ITEM-VALUE     PIC X(254).
       01 AZ-COMPARE-ITEM-EXP-VALUE PIC X(254).
       PROCEDURE DIVISION USING AZ-TEST AZ-ARG-LIST AZ-INFO-BLOCK.
      * START
           DISPLAY 'AZU0000I TEST_TEST2 STARTED...'
           MOVE 0 TO AZ-TEST-NAME-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-NAME-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
      * INITIALIZE PARAMETER
           PERFORM INITIALIZE-PARM
      * SET AREA ADDRESS TO POINTER
      * SET INPUT VALUE
           MOVE 0 TO RETURN-CODE.
           MOVE AZU00000012 TO ZUT00000006 OF ZUT00000005
           MOVE 50 TO ZUT00000007 OF ZUT00000005
           MOVE 500000 TO ZUT00000008 OF ZUT00000005
           MOVE AZU00000013 TO ZUT00000009 OF ZUT00000005
           MOVE 00 TO ZUT0000000D OF ZUT00000005
           MOVE AZU00000014 TO ZUT0000000E OF ZUT00000005
      * CALL TEST PROGRAM
           DISPLAY 'AZU0000I CALL POLYCALC'
           CALL BZUGETEP USING BY REFERENCE PROGRAM-NAME AZ-CSECT
             RETURNING AZ-EP-PTR.
           IF AZ-EP-PTR = NULL THEN
             MOVE 1 TO MESSAGE-LEN OF BZ-ASSERT
             STRING 'UNABLE TO GET THE ENTRY POINT BY BZUGETEP.'
               DELIMITED BY SIZE
               INTO MESSAGE-TXT OF BZ-ASSERT
               WITH POINTER MESSAGE-LEN OF BZ-ASSERT
             END-STRING
             SUBTRACT 1 FROM MESSAGE-LEN OF BZ-ASSERT
             PERFORM THROW-ASSERTION-M
             GOBACK
           END-IF
           SET ADDRESS OF AZ-PROC-PTR TO AZ-EP-PTR.
           CALL AZ-PROC-PTR
           USING ZUT00000005
           .
      * EVALUATE OUTPUT VALUE
           MOVE 0 TO RETURN-CODE
           IF ZUT00000006 OF ZUT00000005 = AZU00000015 THEN
             CONTINUE
           ELSE
             MOVE ZUT00000006 OF ZUT00000005 TO AZU00000019(1)
             MOVE AZU00000015 TO AZU00000019(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000018
             MOVE LENGTH OF AZU00000018 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000019(1)
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000019(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF (ZUT00000007 OF ZUT00000005 IS NUMERIC)
               AND (ZUT00000007 OF ZUT00000005 = 50) THEN
             CONTINUE
           ELSE
             MOVE ZUT00000007 OF ZUT00000005 TO AZU0000001B(1)
             MOVE 50 TO AZU0000001B(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000001A
             MOVE LENGTH OF AZU0000001A TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF ZUT00000007
           OF ZUT00000005
             MOVE 2 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000001B(2)
             MOVE 2 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF (ZUT00000008 OF ZUT00000005 IS NUMERIC)
               AND (ZUT00000008 OF ZUT00000005 = 500000) THEN
             CONTINUE
           ELSE
             MOVE ZUT00000008 OF ZUT00000005 TO AZU0000001D(1)
             MOVE 500000 TO AZU0000001D(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000001C
             MOVE LENGTH OF AZU0000001C TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF ZUT00000008
           OF ZUT00000005
             MOVE 10 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000001D(2)
             MOVE 10 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT00000009 OF ZUT00000005 = AZU00000016 THEN
             CONTINUE
           ELSE
             MOVE ZUT00000009 OF ZUT00000005 TO AZU0000001F(1)
             MOVE AZU00000016 TO AZU0000001F(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU0000001E
             MOVE LENGTH OF AZU0000001E TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU0000001F(1)
             MOVE 1 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU0000001F(2)
             MOVE 1 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF (ZUT0000000D OF ZUT00000005 IS NUMERIC)
               AND (ZUT0000000D OF ZUT00000005 = 720.0) THEN
             CONTINUE
           ELSE
             MOVE ZUT0000000D OF ZUT00000005 TO AZU00000021(1)
             MOVE 720.0 TO AZU00000021(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000020
             MOVE LENGTH OF AZU00000020 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF ZUT0000000D
           OF ZUT00000005
             MOVE 8 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000021(2)
             MOVE 8 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
           IF ZUT0000000E OF ZUT00000005 = AZU00000017 THEN
             CONTINUE
           ELSE
             MOVE ZUT0000000E OF ZUT00000005 TO AZU00000023(1)
             MOVE AZU00000017 TO AZU00000023(2)
             SET AZ-COMPARE-ITEM-NAME-PTR TO ADDRESS OF AZU00000022
             MOVE LENGTH OF AZU00000022 TO AZ-COMPARE-ITEM-NAME-LEN
             SET AZ-COMPARE-ITEM-VALUE-PTR TO ADDRESS OF AZU00000023(1)
             MOVE 2 TO AZ-COMPARE-ITEM-VALUE-LEN
             SET AZ-COMPARE-ITEM-EXP-VALUE-PTR TO ADDRESS OF
           AZU00000023(2)
             MOVE 2 TO AZ-COMPARE-ITEM-EXP-VALUE-LEN
             PERFORM THROW-ASSERTION
           END-IF
      * END
           DISPLAY 'AZU0000I TEST_TEST2 END.'
           GOBACK.
       INITIALIZE-PARM.
           INITIALIZE ZUT00000005
           EXIT.
       THROW-ASSERTION.
           MOVE 1 TO MESSAGE-LEN OF BZ-ASSERT
           STRING 'COMPARE FAILED IN PROCEDURE DIVISION.'
             DELIMITED BY SIZE INTO MESSAGE-TXT OF BZ-ASSERT
             WITH POINTER MESSAGE-LEN OF BZ-ASSERT
           END-STRING
           SUBTRACT 1 FROM MESSAGE-LEN OF BZ-ASSERT
           SET ADDRESS OF AZ-COMPARE-ITEM-NAME TO
           AZ-COMPARE-ITEM-NAME-PTR.
           SET ADDRESS OF AZ-COMPARE-ITEM-VALUE TO
           AZ-COMPARE-ITEM-VALUE-PTR.
           SET ADDRESS OF AZ-COMPARE-ITEM-EXP-VALUE TO
           AZ-COMPARE-ITEM-EXP-VALUE-PTR.
           DISPLAY 'AZU0000I *******************************************
      -    '*************************************'
           DISPLAY 'AZU2001W THE TEST "' AZ-TEST(1:AZ-TEST-NAME-LEN) '"
      -    'FAILED DUE TO AN ASSERTION.'
           DISPLAY 'AZU1101I ' MESSAGE-TXT OF BZ-ASSERT(1:MESSAGE-LEN
           OF BZ-ASSERT)
           DISPLAY 'AZU0000I  DATA ITEM NAME : '
           AZ-COMPARE-ITEM-NAME(1:AZ-COMPARE-ITEM-NAME-LEN)
           DISPLAY 'AZU0000I   VALUE         : '
           AZ-COMPARE-ITEM-VALUE(1:AZ-COMPARE-ITEM-VALUE-LEN)
           DISPLAY 'AZU0000I   EXPECTED VALUE: '
           AZ-COMPARE-ITEM-EXP-VALUE(1:AZ-COMPARE-ITEM-EXP-VALUE-LEN)
           DISPLAY 'AZU0000I *******************************************
      -    '*************************************'
           CALL BZUASSRT USING BZ-P1 BZ-P2 BZ-P3 BZ-ASSERT
           MOVE 1 TO TRACE-LEN OF BZ-TRACE
           MOVE 1 TO AZ-ITEM-NAME-S
           PERFORM UNTIL AZ-ITEM-NAME-S > AZ-COMPARE-ITEM-NAME-LEN
             MOVE 206 TO AZ-ITEM-NAME-LEN
             IF AZ-ITEM-NAME-S + 206 > AZ-COMPARE-ITEM-NAME-LEN THEN
               MOVE AZ-COMPARE-ITEM-NAME-LEN TO AZ-ITEM-NAME-LEN
               SUBTRACT AZ-ITEM-NAME-S FROM AZ-ITEM-NAME-LEN
               ADD 1 TO AZ-ITEM-NAME-LEN
             END-IF
             STRING 'ITEM NAME='
             AZ-COMPARE-ITEM-NAME(AZ-ITEM-NAME-S:AZ-ITEM-NAME-LEN)
               DELIMITED BY SIZE INTO TRACE-TXT OF BZ-TRACE
               WITH POINTER TRACE-LEN OF BZ-TRACE
             END-STRING
             SUBTRACT 1 FROM TRACE-LEN OF BZ-TRACE
             SET AZ-TRACE-PTR TO ADDRESS OF TRACE-TXT OF BZ-TRACE
             CALL BZUTRACE USING BZ-TRACE
             MOVE 1 TO TRACE-LEN OF BZ-TRACE
             ADD AZ-ITEM-NAME-LEN TO AZ-ITEM-NAME-S
           END-PERFORM
           STRING 'VALUE   ='
           AZ-COMPARE-ITEM-VALUE(1:AZ-COMPARE-ITEM-VALUE-LEN)
               DELIMITED BY SIZE INTO TRACE-TXT OF BZ-TRACE
               WITH POINTER TRACE-LEN OF BZ-TRACE
             END-STRING
           SUBTRACT 1 FROM TRACE-LEN OF BZ-TRACE
           CALL BZUTRACE USING BZ-TRACE
           MOVE 1 TO TRACE-LEN OF BZ-TRACE
           STRING 'EXPECTED='
           AZ-COMPARE-ITEM-EXP-VALUE(1:AZ-COMPARE-ITEM-EXP-VALUE-LEN)
               DELIMITED BY SIZE INTO TRACE-TXT OF BZ-TRACE
               WITH POINTER TRACE-LEN OF BZ-TRACE
             END-STRING
           SUBTRACT 1 FROM TRACE-LEN OF BZ-TRACE
           CALL BZUTRACE USING BZ-TRACE
           EXIT.
       THROW-ASSERTION-M.
           DISPLAY 'AZU0000I *******************************************
      -    '*************************************'
           DISPLAY 'AZU2001W THE TEST "' AZ-TEST(1:AZ-TEST-NAME-LEN) '"
      -    'FAILED DUE TO AN ASSERTION.'
           DISPLAY 'AZU1101I ' MESSAGE-TXT OF BZ-ASSERT(1:MESSAGE-LEN
           OF BZ-ASSERT)
           DISPLAY 'AZU0000I *******************************************
      -    '*************************************'
           CALL BZUASSRT USING BZ-P1 BZ-P2 BZ-P3 BZ-ASSERT
           EXIT.
       END PROGRAM TEST_TEST2.
      *+---------------------------------------------------------------+
      *| UNIT TEST FOR Z/OS: BZU_TEST                                  |
      *|     CALLBACK DEFINITION FOR TEST                              |
      *| TEST CASE VERSION: 201                                        |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'BZU_TEST'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 PROGRAM-NAME   PIC X(8)  VALUE 'POLYCALC'.
       01 AZ-CSECT       PIC X(72) VALUE SPACES.
       01 BZ-ASSERT.
         03 MESSAGE-LEN PIC S9(4) COMP-4 VALUE 24.
         03 MESSAGE-TXT PIC X(254) VALUE 'HELLO FROM TEST CALLBACK'.
       01  BZ-P1 PIC S9(9) COMP-4 VALUE 4.
       01  BZ-P2 PIC S9(9) COMP-4 VALUE 2001.
       01  BZ-P3 PIC X(3) VALUE 'AZU'.
       01 BZ-TRACE.
         03 TRACE-LEN       PIC S9(4) COMP-4 VALUE 5.
         03 TRACE-TXT       PIC X(254) VALUE 'TRACE'.
       01 BZUASSRT          PIC X(8) VALUE 'BZUASSRT'.
       01 BZUTRACE          PIC X(8) VALUE 'BZUTRACE'.
       01 AZ-TRACE-PTR      POINTER.
       01 ASSERT-ST.
         03 ASSERT-RC PIC 9(9) BINARY VALUE 4.
         03 ASSERT-TEXT PIC 9(4) BINARY VALUE 0.
       01 AZ-TEST-NAME-LEN       PIC S9(9) COMP-5.
       LOCAL-STORAGE SECTION.
       LINKAGE SECTION.
       01 AZ-TEST                   PIC X(80).
       01 AZ-INFO-BLOCK.
          COPY EQAITERC.
       01 AZ-ARG-LIST.
         03 ARG-LENGTH PIC 9(4) COMP-4.
         03 ARG-DATA PIC X(256).
      *  *** LINKAGE-DATA : ZUT00000005
       1 ZUT00000005.
      *    *** POLICY-NUMBER : ZUT00000006
         15 ZUT00000006 PIC X(10).
      *    *** DRIVER-AGE : ZUT00000007
         15 ZUT00000007 PIC 99.
      *    *** CAR-VALUE : ZUT00000008
         15 ZUT00000008 PIC 9(7)V99.
      *    *** COVERAGE-LEVEL : ZUT00000009
         15 ZUT00000009 PIC X.
      *    *** BASIC : ZUT0000000A
         88 ZUT0000000A VALUE 'B'.
      *    *** STANDRD : ZUT0000000B
         88 ZUT0000000B VALUE 'S'.
      *    *** PREMIUM : ZUT0000000C
         88 ZUT0000000C VALUE 'P'.
      *    *** CALCULATED-PREMIUM : ZUT0000000D
         15 ZUT0000000D PIC 9(5)V99.
      *    *** RET-CODE : ZUT0000000E
         15 ZUT0000000E PIC X(2).
       PROCEDURE DIVISION.
      * SET INPUT VALUE
           ENTRY "PGM_INPT_POLYCALC" USING AZ-TEST AZ-INFO-BLOCK
           ZUT00000005.
           DISPLAY 'AZU0000I PGM_INPT_POLYCALC INPUT VALUES...'.
           MOVE 0 TO RETURN-CODE.
           MOVE 0 TO AZ-TEST-NAME-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-NAME-LEN FOR CHARACTERS
             BEFORE INITIAL SPACE.
           EVALUATE AZ-TEST(1:AZ-TEST-NAME-LEN)
           WHEN SPACE
             CONTINUE
           WHEN OTHER
             CONTINUE
           END-EVALUATE.
           PERFORM TEARDOWN.
           GOBACK.
      * EVALUATE OUTPUT VALUE
           ENTRY "PGM_OUTP_POLYCALC" USING AZ-TEST AZ-INFO-BLOCK
           ZUT00000005.
           DISPLAY 'AZU0000I PGM_OUTP_POLYCALC CHECK VALUES...'.
           MOVE 4 TO RETURN-CODE.
           MOVE 0 TO AZ-TEST-NAME-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-NAME-LEN FOR CHARACTERS
             BEFORE INITIAL SPACE.
           EVALUATE AZ-TEST(1:AZ-TEST-NAME-LEN)
           WHEN SPACE
             CONTINUE
           WHEN 'TEST1'
             MOVE 0 TO RETURN-CODE
           WHEN 'TEST2'
             MOVE 0 TO RETURN-CODE
           WHEN OTHER
             CONTINUE
           END-EVALUATE.
           PERFORM TEARDOWN.
           GOBACK.
       TEARDOWN.
           DISPLAY 'AZU0000I BZU_TEST END.'
           EXIT.
       END PROGRAM BZU_TEST.
      *+---------------------------------------------------------------+
      *| UNIT TEST FOR Z/OS: BZU_INIT                                  |
      *|     INITIAL PROCEDURE                                         |
      *| TEST CASE VERSION: 201                                        |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'BZU_INIT'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 AZ-TEST-NAME-LEN      PIC S9(9) COMP-5.
       01 AZ-TESTCASE-ID        PIC X(36)
           VALUE '2b4a1c52-da3f-4d01-a4b0-9bea87fe930c'.
       LINKAGE SECTION.
       01 AZ-TEST               PIC X(80).
       01 AZ-TEST-ID            PIC X(80).
       01 AZ-INFO-BLOCK.
           COPY EQAITERC.
       PROCEDURE DIVISION USING AZ-TEST
                                AZ-TEST-ID
                                AZ-INFO-BLOCK.
           MOVE 0 TO AZ-TEST-NAME-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-NAME-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
           DISPLAY 'AZU0000I BZU_INIT: ' AZ-TEST(1:AZ-TEST-NAME-LEN)
           DISPLAY 'AZU0000I TEST CASE VERSION: 201'
           DISPLAY 'AZU0001I FOR TEST RUNNER: latest'
           MOVE AZ-TESTCASE-ID TO AZ-TEST-ID
           GOBACK.
       END PROGRAM BZU_INIT.
      *+---------------------------------------------------------------+
      *| UNIT TEST FOR Z/OS: BZU_TERM                                  |
      *|     TERMINATION PROCEDURE                                     |
      *| TEST CASE VERSION: 201                                        |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. 'BZU_TERM'.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01 AZ-TEST-NAME-LEN      PIC S9(9) COMP-5.
       LINKAGE SECTION.
       01 AZ-TEST               PIC X(80).
       01 AZ-INFO-BLOCK.
           COPY EQAITERC.
       PROCEDURE DIVISION USING AZ-TEST
                                AZ-INFO-BLOCK.
           MOVE 0 TO AZ-TEST-NAME-LEN.
           INSPECT AZ-TEST TALLYING AZ-TEST-NAME-LEN FOR
           CHARACTERS BEFORE INITIAL SPACE.
           DISPLAY 'AZU0000I BZU_TERM: ' AZ-TEST(1:AZ-TEST-NAME-LEN)
           GOBACK.
       END PROGRAM BZU_TERM.
